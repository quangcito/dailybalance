/**
 * Represents a structured answer generated by the Answer Engine.
 * This allows for more than just plain text, potentially including
 * actionable suggestions, clarifications, or data visualizations later.
 */
export interface StructuredAnswer {
  /** The primary textual response. */
  text: string;
  /** Optional suggestions for next actions (e.g., log food, do exercise). */
  suggestions?: string[];
  /** Optional data points or summaries derived from the reasoning layer. */
  dataSummary?: Record<string, any>; // Flexible structure for now
  /** Confidence score or flags from the LLM. */
  confidence?: number;
  error?: string; // If an error occurred during generation
}

/**
 * Represents a source used by the Knowledge Layer to generate the answer.
 */
export interface Source {
  /** The URL of the source document or page. */
  url: string;
  /** The title of the source. */
  title: string;
  /** Optional snippet or relevant text from the source. */
  snippet?: string;
}

/**
 * Represents a message sent by the user in the conversation UI.
 */
export interface UserMessage {
  role: 'user';
  query: string;
  timestamp: string; // ISO timestamp string
}

/**
 * Represents a message sent by the system (Answer Engine) in the conversation UI.
 */
export interface SystemMessage {
  role: 'system';
  answer: StructuredAnswer;
  sources: Source[];
  timestamp: string; // ISO timestamp string
}

/**
 * Union type for messages displayed in the frontend conversation history.
 */
export type ConversationMessage = UserMessage | SystemMessage;
